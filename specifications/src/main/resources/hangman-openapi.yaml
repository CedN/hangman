openapi: 3.0.1
info:
  title: Hangman
  description: 'This is a simple service to play to hangman.'
  version: 1.0.0
paths:
  /game:
    post:
      summary: 'Create a new game'
      operationId: createGame
      responses:
        200:
          description: 'New game created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewGameResponse'
  /game/{gameId}/proposal/{letter}: 
    put:
      summary: 'Propose a letter'
      parameters:
      - name: gameId
        in: path
        description: 'ID of game'
        required: true
        schema:
          type: string
          example: 
            '036c5abc-8dbd-11eb-8dcd-0242ac130003'
      - name: letter
        in: path
        description: 'Proposed letter'
        required: true
        schema:
          type: string
          enum: [ a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]
          example: 
            'a'
      responses:
        200: 
          description: 'Proposal response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalResponse'
        400:
          description: 'Unknown game'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    NewGameResponse:
      type: object
      properties:
        gameId:
          description: 'ID of game'
          type: string
          example: 
            '036c5abc-8dbd-11eb-8dcd-0242ac130003'
        mask:
          description: 'Masked word to guess'
          type: string
          example:
            '--------'
    ProposalResponse:
      type: object
      properties:
        ProposedLetter:
          type: string
          minLength: 1
          maxLength: 1
          example: 
            'a'
        letterFound:
          type: boolean
          example:
            true
        gameState:
          type: string
          enum: [inProgress, won, loose]
        maskedWord:
          type: string
          example: 
            -a---a-
        hangmanStep:
          type: integer
          minimum: 0
          maximum: 7
          example:
            0
    Error: 
      type: object
      properties:
        code:
          type: integer
          example:
            100
        message:
          type: string
          example:
            'Error during game instantiation'
